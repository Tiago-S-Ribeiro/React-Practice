{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Desktop\\\\React-Practice\\\\Add-Users-Project\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal'; // import Wrapper from '../Helpers/Wrapper'\n\nimport styles from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef(); // const [enteredUsername, setEnteredUsername] = useState('');\n  // const [enteredAge, setEnteredAge] = useState('');\n\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredUserAge = ageInputRef.current.value;\n\n    if (enteredName.trim().length === 0 || enteredUserAge.trim().length === 0) {\n      setError({\n        title: 'Invalid input',\n        message: 'Please enter a valid name and age.'\n      });\n      return;\n    }\n\n    if (+enteredUserAge < 1) {\n      //the + enforces that the string is parsable to a number.\n      setError({\n        title: 'Invalid age',\n        message: 'Please enter a valid age. (>0)'\n      });\n      return;\n    }\n\n    props.onAddUser(enteredName, enteredUserAge); // setEnteredUsername('');\n    // setEnteredAge('');\n\n    nameInputRef.current.value = '';\n    ageInputRef.current.value = '';\n  }; // const usernameChangeHandler = (event) => {\n  //     // setEnteredUsername(event.target.value);\n  // }\n  // const ageChangeHandler = (event) => {\n  //     setEnteredAge(event.target.value);\n  // }\n\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age (Years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser; //Estes artefatos deviam estar no input do username e da age, antes do uso de refs, quanto tinha o uso de handlers\n// value={enteredUsername} onChange={usernameChangeHandler}\n// value={enteredAge} onChange={ageChangeHandler}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/tiago/Desktop/React-Practice/Add-Users-Project/src/components/Users/AddUser.js"],"names":["React","useState","useRef","Card","Button","ErrorModal","styles","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredName","current","value","enteredUserAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport Card from '../UI/Card'\r\nimport Button from '../UI/Button'\r\nimport ErrorModal from '../UI/ErrorModal'\r\n// import Wrapper from '../Helpers/Wrapper'\r\nimport styles from './AddUser.module.css'\r\n\r\nconst AddUser = (props) => {\r\n    const nameInputRef = useRef();\r\n    const ageInputRef = useRef();\r\n\r\n    // const [enteredUsername, setEnteredUsername] = useState('');\r\n    // const [enteredAge, setEnteredAge] = useState('');\r\n    const [error, setError] = useState();\r\n\r\n    const addUserHandler = (event) => {\r\n        event.preventDefault();\r\n        const enteredName = nameInputRef.current.value;\r\n        const enteredUserAge = ageInputRef.current.value;\r\n\r\n        if(enteredName.trim().length === 0 || enteredUserAge.trim().length === 0 ){\r\n            setError({title: 'Invalid input', message: 'Please enter a valid name and age.'})\r\n            return;\r\n        }\r\n        if(+enteredUserAge < 1){ //the + enforces that the string is parsable to a number.\r\n            setError({title: 'Invalid age', message: 'Please enter a valid age. (>0)'})\r\n            return;\r\n        }\r\n\r\n        props.onAddUser(enteredName, enteredUserAge);\r\n        // setEnteredUsername('');\r\n        // setEnteredAge('');\r\n        nameInputRef.current.value = '';\r\n        ageInputRef.current.value = '';\r\n    }\r\n\r\n    // const usernameChangeHandler = (event) => {\r\n    //     // setEnteredUsername(event.target.value);\r\n    // }\r\n\r\n    // const ageChangeHandler = (event) => {\r\n    //     setEnteredAge(event.target.value);\r\n    // }\r\n\r\n    const errorHandler = () => {\r\n        setError(null);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        {/* <Wrapper> */}\r\n            {error && <ErrorModal title={error.title} message={error.message} onConfirm={errorHandler}></ErrorModal>}\r\n            <Card className={styles.input}>\r\n                <form onSubmit={addUserHandler}>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input id=\"username\" type=\"text\" ref={nameInputRef}/>\r\n                    <label htmlFor=\"age\">Age (Years)</label>\r\n                    <input id=\"age\" type=\"number\" ref={ageInputRef}/>\r\n                    <Button type=\"submit\">Add User</Button>\r\n                </form>\r\n            </Card>\r\n        {/* </Wrapper> */}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default AddUser;\r\n\r\n//Estes artefatos deviam estar no input do username e da age, antes do uso de refs, quanto tinha o uso de handlers\r\n// value={enteredUsername} onChange={usernameChangeHandler}\r\n// value={enteredAge} onChange={ageChangeHandler}"]},"metadata":{},"sourceType":"module"}